package serializacjaobiektow;



import java.awt.BorderLayout;
import java.io.*;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.StringTokenizer;


public class Towar implements Serializable
{
    public Towar()
    {
        this.cena = 0.0;
        this.nazwa = " ";
        this.dataWydania = new GregorianCalendar().getTime();
    }
    
    public Towar(double cena, String nazwa)
    {
        this();
        this.cena = cena;
        this.nazwa = nazwa; 
    }
    
    public Towar(double cena, String nazwa, int rok, int m, int dn)
    {
        this(cena, nazwa);
        GregorianCalendar kalendarz = new GregorianCalendar(rok,m-1,dn);
        dataWydania = kalendarz.getTime();
    }
    public double pobierzCene()
    {
        return this.cena;
    }
    public String pobierzNazwe()
    {
        return this.nazwa;
    }
    public Date pobierzDate()
    {
        return dataWydania;
    }
    public void ustawCene(double cena)
    {
        this.cena = cena;
    }
    public void ustawNazwe(String nazwa)
    {
        this.nazwa = nazwa;
    }
    public void ustawDate (int r, int m, int dn)
    {
        GregorianCalendar kalendarz = new GregorianCalendar(r,m-1,dn);
        this.dataWydania = kalendarz.getTime();
        
    }
    public void ustawDate(Date data)
    {
        this.dataWydania = data;
    }
    public String pobierzHaslo()
    {
        return this.haslo;
    }
    @Override
    public String toString()
    {
        GregorianCalendar kalendarz = new GregorianCalendar();
        kalendarz.setTime(this.dataWydania);
        return this.cena+" zl; nazwa: "+this.nazwa+" "+kalendarz.get(Calendar.YEAR)+" rok "+(kalendarz.get(Calendar.MONTH)+1)+" miesiac "+kalendarz.get(Calendar.DAY_OF_MONTH)+" dzien ";
    }
    private void readObject(ObjectInputStream inS) throws IOException, ClassNotFoundException 
    {
        inS.defaultReadObject();
        if(haslo!= null)
        if(!haslo.equals("tajne"))
            throw new IOException("Dane sa nieprawidlowe");
        
        //System.out.println("Ja teraz wywoluje sie z metody readobject");
            
    }
    private void writeObject(ObjectOutputStream outS) throws IOException
    {
        outS.defaultWriteObject();
        
    }
    public static final int DLUGOSC_NAZWY = 30; 
    public static final int DLUGOSC_REKORDU = (Character.SIZE* DLUGOSC_NAZWY + Double.SIZE + 3 * Integer.SIZE)/8; 
    
    private double cena;
    private String nazwa;
    private Date dataWydania; 
    private transient String haslo = "tajne";
    
}
